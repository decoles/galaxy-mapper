{"ast":null,"code":"var _jsxFileName = \"/home/decoles/projects/galaxy-mapper/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as THREE from \"three\";\nimport { useEffect } from \"react\";\nimport SceneInit from './library/SceneInitialization';\nimport Planet from \"./library/Planet\";\nimport Rotation from \"./library/Rotation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  useEffect(async () => {\n    let test = new SceneInit();\n    test.initScene();\n    test.animate();\n    const solarSystem = new THREE.Group();\n    test.scene.add(solarSystem);\n    const mercury = new Planet(2, 16, \"/textures/mercury.jpg\");\n    const mercuryMesh = mercury.getMesh();\n    let mercurySystem = new THREE.Group();\n    mercurySystem.add(mercuryMesh);\n    const venus = new Planet(3, 32, \"/textures/venus.jpg\");\n    const venusMesh = venus.getMesh();\n    let venusSystem = new THREE.Group();\n    venusSystem.add(venusMesh);\n    const earth = new Planet(4, 48, \"/textures/earth.jpg\");\n    const earthMesh = earth.getMesh();\n    let earthSystem = new THREE.Group();\n    earthSystem.add(earthMesh);\n    const mars = new Planet(3, 64, \"/textures/mars.jpg\");\n    const marsMesh = mars.getMesh();\n    let marsSystem = new THREE.Group();\n    marsSystem.add(marsMesh);\n    solarSystem.add(mercurySystem, venusSystem, earthSystem, marsSystem);\n    const mercuryRotation = new Rotation(mercuryMesh);\n    const mercuryRotationMesh = mercuryRotation.getMesh();\n    mercurySystem.add(mercuryRotationMesh);\n    const venusRotation = new Rotation(venusMesh);\n    const venusRotationMesh = venusRotation.getMesh();\n    venusSystem.add(venusRotationMesh);\n    const earthRotation = new Rotation(earthMesh);\n    const earthRotationMesh = earthRotation.getMesh();\n    earthSystem.add(earthRotationMesh);\n    const marsRotation = new Rotation(marsMesh);\n    const marsRotationMesh = marsRotation.getMesh();\n    marsSystem.add(marsRotationMesh); //make solar system static\n\n    mercurySystem.rotation.y = 3;\n    venusSystem.rotation.y = 9;\n    earthSystem.rotation.y += 8;\n    marsSystem.rotation.y += 5;\n\n    const animate = () => {\n      //place animations here\n      requestAnimationFrame(animate);\n    };\n\n    animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"myThreeJsCanvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Home, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["THREE","useEffect","SceneInit","Planet","Rotation","Home","test","initScene","animate","solarSystem","Group","scene","add","mercury","mercuryMesh","getMesh","mercurySystem","venus","venusMesh","venusSystem","earth","earthMesh","earthSystem","mars","marsMesh","marsSystem","mercuryRotation","mercuryRotationMesh","venusRotation","venusRotationMesh","earthRotation","earthRotationMesh","marsRotation","marsRotationMesh","rotation","y","requestAnimationFrame"],"sources":["/home/decoles/projects/galaxy-mapper/frontend/src/App.js"],"sourcesContent":["import * as THREE from \"three\";\r\nimport { useEffect } from \"react\";\r\nimport SceneInit from './library/SceneInitialization';\r\nimport Planet from \"./library/Planet\";\r\nimport Rotation from \"./library/Rotation\";\r\n\r\nexport default function Home() {\r\n  useEffect(async () => {\r\n    let test = new SceneInit();\r\n    test.initScene();\r\n    test.animate();\r\n    const solarSystem = new THREE.Group();\r\n    test.scene.add(solarSystem);\r\n\r\n    const mercury = new Planet(2, 16, \"/textures/mercury.jpg\");\r\n    const mercuryMesh = mercury.getMesh();\r\n    let mercurySystem = new THREE.Group();\r\n    mercurySystem.add(mercuryMesh);\r\n\r\n    const venus = new Planet(3, 32, \"/textures/venus.jpg\");\r\n    const venusMesh = venus.getMesh();\r\n    let venusSystem = new THREE.Group();\r\n    venusSystem.add(venusMesh);\r\n\r\n    const earth = new Planet(4, 48, \"/textures/earth.jpg\");\r\n    const earthMesh = earth.getMesh();\r\n    let earthSystem = new THREE.Group();\r\n    earthSystem.add(earthMesh);\r\n\r\n    const mars = new Planet(3, 64, \"/textures/mars.jpg\");\r\n    const marsMesh = mars.getMesh();\r\n    let marsSystem = new THREE.Group();\r\n    marsSystem.add(marsMesh);\r\n\r\n    solarSystem.add(mercurySystem, venusSystem, earthSystem, marsSystem);\r\n\r\n    const mercuryRotation = new Rotation(mercuryMesh);\r\n    const mercuryRotationMesh = mercuryRotation.getMesh();\r\n    mercurySystem.add(mercuryRotationMesh);\r\n    const venusRotation = new Rotation(venusMesh);\r\n    const venusRotationMesh = venusRotation.getMesh();\r\n    venusSystem.add(venusRotationMesh);\r\n    const earthRotation = new Rotation(earthMesh);\r\n    const earthRotationMesh = earthRotation.getMesh();\r\n    earthSystem.add(earthRotationMesh);\r\n    const marsRotation = new Rotation(marsMesh);\r\n    const marsRotationMesh = marsRotation.getMesh();\r\n    marsSystem.add(marsRotationMesh);\r\n\r\n    //make solar system static\r\n\r\n    mercurySystem.rotation.y = 3 ; \r\n    venusSystem.rotation.y = 9;\r\n    earthSystem.rotation.y += 8;\r\n    marsSystem.rotation.y += 5;\r\n    const animate = () => {\r\n      //place animations here\r\n      requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    \r\n    \r\n      <canvas id=\"myThreeJsCanvas\" />\r\n  \r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}